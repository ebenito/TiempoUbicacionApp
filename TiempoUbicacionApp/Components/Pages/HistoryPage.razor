@page "/history"
@using TiempoUbicacionApp.Models
@using TiempoUbicacionApp.Services
@inject LocationDatabaseService DatabaseService

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">

    <MudText Typo="Typo.h4" Color="Color.Primary" Class="mb-4">📜 Historial de registros</MudText>

    @if (entries == null)
    {
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" />
    }
    else if (!entries.Any())
    {
        <MudAlert Severity="Severity.Info" Elevation="1">No hay registros guardados.</MudAlert>
    }
    else
    {
        <MudGrid GutterSize="3">
            @foreach (var entry in entries)
            {
                <MudItem xs="12">
                    <MudPaper Class="p-4 entry-card" Elevation="1" Style="background-color: #f0f4f8;">
                        <MudText Typo="Typo.h6" Color="Color.Secondary" Style="background-color: #B0BEC5;">@entry.fechaActual — @entry.horaLocal (@entry.tipoHorario)</MudText>
                        <MudDivider Class="my-2" />
                        <MudText><strong>UTC:</strong> @entry.horaUtc</MudText>
                        <MudText><strong>Desfase:</strong> @entry.desfase</MudText>
                        <MudText><strong>Ubicación:</strong> @entry.Location</MudText>
                        <MudText><strong>Coordenadas:</strong> @entry.Latitude, @entry.Longitude</MudText>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }

</MudContainer>

@code {
    private List<LocationEntry> entries;

    protected override async Task OnInitializedAsync()
    {
        entries = await DatabaseService.GetAllEntriesAsync();
    }
}
