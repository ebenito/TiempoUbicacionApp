@using TiempoUbicacionApp.Services
@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject ISnackbar Snackbar
@inject IAlertService AlertService


<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="_theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<div class="app-root @( _isDarkMode ? "app-dark" : "app-light")">
    <MudLayout>

        <!-- AppBar con botón hamburguesa -->
        <MudAppBar Color="Color.Dark" Elevation="4" >
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
            <MudText Typo="Typo.h6" Class="ml-2">Tiempo / Ubicación</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/ebenito/TiempoUbicacionApp" Target="_blank" />
        </MudAppBar>

        <!-- Drawer lateral -->
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1" Width="260px" ClipMode="DrawerClipMode.Always" Anchor="Anchor.Left" Variant="DrawerVariant.Temporary">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">Menú</MudText>
            </MudDrawerHeader>
            <MudNavMenu>
                <MudNavLink Href="/" Match="NavLinkMatch.All">🏠 Inicio</MudNavLink>
                <MudNavLink Href="/history">📜 Historial</MudNavLink>
                <MudNavLink Href="/configuracion">⚙️ Configuración</MudNavLink>
                <MudNavLink Href="/about">ℹ️ Acerca de</MudNavLink>
            </MudNavMenu>
        </MudDrawer>

        <!-- Contenido principal -->
   
            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.False" Class="p-4">
                    @Body
                </MudContainer>
            </MudMainContent>

    </MudLayout>
</div>

@code {
    private MudTheme _theme;
    private bool _isDarkMode;
    private bool _drawerOpen = false;

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }


    protected override async Task OnInitializedAsync()
    {
        await ThemeService.InitializeAsync(); // <- Se asegura de leer la preferencia
        _isDarkMode = ThemeService.IsDarkMode;
        _theme = ThemeService.GetTheme();
        ThemeService.OnChange += ThemeChanged;
        
        if (AlertService is MauiAlertService mas)
        {
            mas.Initialize(Snackbar); // Aquí ya MudBlazor está listo
        }
    }


    private void ThemeChanged(bool isDark)
    {
        _isDarkMode = isDark;
        _theme = ThemeService.GetTheme();
        InvokeAsync(StateHasChanged);
    }

    public void Dispose() => ThemeService.OnChange -= ThemeChanged;

}
